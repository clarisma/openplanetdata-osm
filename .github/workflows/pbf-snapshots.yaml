name: Build & Publish PBF Snapshots

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  REMOTE_NAME: openplanetdata-r2

jobs:
  pbf:
    runs-on: openplanetdata-hetzner-ccx33

    outputs:
      tag: ${{ steps.date.outputs.tag }}

    steps:
      - name: Set date tag
        id: date
        run: echo "tag=$(date '+%Y%m%d')" >>"$GITHUB_OUTPUT"

      - name: Install core tools
        run: |
          sudo apt-get update
          sudo apt-get install -y aria2 osmctools osmium-tool unzip

      - name: Install rclone
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        run: |
          mkdir -p ~/.config/rclone
          printf '%s' "$RCLONE_CONFIG_DATA" > ~/.config/rclone/rclone.conf
          curl https://rclone.org/install.sh | sudo bash
          rclone --version

      - name: Download latest OSM planet
        run: |
          aria2c --seed-time=0 \
            https://planet.openstreetmap.org/pbf/planet-latest.osm.pbf.torrent \
            --index-out=1=planet-latest.osm.pbf

      - name: Generate new PBF version with latest changes
        run: |
          f="planet-${{ steps.date.outputs.tag }}.osm.pbf"
          time osmupdate planet-latest.osm.pbf "$f" --hour --verbose
          rm planet-latest.osm.pbf
          shasum -a 256 "$f" >"$f.sha256"
          stat -c '%s %W %Z' "$f" | \
            awk '{print "{\"created\":"($2==0?$3:$2)",\"size\":"$1"}"}' >"$f.metadata"

      - name: Upload PBF files to R2
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        run: |
          date=${{ steps.date.outputs.tag }}
          rclone copyto "planet-$date.osm.pbf"          "$REMOTE_NAME:openplanetdata/osm/planet/pbf/planet-latest.osm.pbf"
          rclone copyto "planet-$date.osm.pbf.metadata" "$REMOTE_NAME:openplanetdata/osm/planet/pbf/planet-latest.osm.pbf.metadata"
          rclone copyto "planet-$date.osm.pbf.sha256"   "$REMOTE_NAME:openplanetdata/osm/planet/pbf/planet-latest.osm.pbf.sha256"